#!/usr/bin/python

# MIT License
#
# Copyright (c) 2013,2014 Gary Anderson

__author__ = "ganderson@seattleacademy.org (Gary Anderson)"

import logging
import StringIO
import sys
import time
import create
import requests
import json
import socket

FORMAT = '%(asctime)s %(levelname)s [%(filename)s:%(lineno)d] %(message)s'
DATE_FORMAT = '%H%M%S'

def getipaddress():
  s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
  s.connect(("8.8.8.8",80))
  myip = s.getsockname()[0]
  s.close()
  return myip   

def main():
  c = create.Create('/dev/ttyUSB0', 2)
  url = "http://saasmath.seattleacademy.org/saasbot/readbot.php"
  
  mysession = requests.Session()
  myip = getipaddress()
  try:
	while 1:
		#payload = {'VOLTAGE': str(c.getSensor('VOLTAGE')), 'botname': myip}
		payload = {'botname':myip}
		payload['VOLTAGE'] = str(c.getSensor('VOLTAGE'))
		payload['OI_MODE'] = str(c.getSensor('OI_MODE'))
		payload['BUMPS_AND_WHEEL_DROPS'] = str(c.getSensor('BUMPS_AND_WHEEL_DROPS'))
		payload['WALL_SIGNAL'] = str(c.getSensor('WALL_SIGNAL'))
		payload['CLIFF_LEFT_SIGNAL'] = str(c.getSensor('CLIFF_LEFT_SIGNAL'))
		payload['CLIFF_FRONT_LEFT_SIGNAL'] = str(c.getSensor('CLIFF_FRONT_LEFT_SIGNAL'))
		payload['CLIFF_FRONT_RIGHT_SIGNAL'] = str(c.getSensor('CLIFF_FRONT_RIGHT_SIGNAL'))
		payload['CLIFF_RIGHT_SIGNAL'] = str(c.getSensor('CLIFF_FRONT_LEFT_SIGNAL'))
		payload['SONG_PLAYING'] = str(c.getSensor('SONG_PLAYING'))
		payload['OI_MODE'] = str(c.getSensor('OI_MODE'))
		payload['CHARGING_SOURCES_AVAILABLE'] = str(c.getSensor('CHARGING_SOURCES_AVAILABLE'))
		payload['RIGHT_VELOCITY'] = str(c.getSensor('RIGHT_VELOCITY'))
		payload['LEFT_VELOCITY'] = str(c.getSensor('LEFT_VELOCITY'))
		r = mysession.get(url,params=payload)
		print payload
		#print r.text
		bytearray = r.text.split(',')
		#print bytearray;
		if(r.text != ""):
		  print "sending command " + r.text
		  moveit = map(int, bytearray)
		  c._rawSend(moveit)

		time.sleep(1)
		
  except KeyboardInterrupt:
		print 'shutdown'	
  		c.shutdown()
  


if __name__ == '__main__':
  main()