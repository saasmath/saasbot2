#!/usr/bin/python

# MIT License
#
# Copyright (c) 2013,2014 Gary Anderson

__author__ = "ganderson@seattleacademy.org (Gary Anderson)"

import logging
import StringIO
import sys
import time
import create
import requests
import json
import socket

FORMAT = '%(asctime)s %(levelname)s [%(filename)s:%(lineno)d] %(message)s'
DATE_FORMAT = '%H%M%S'

def getipaddress():
  s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
  s.connect(("8.8.8.8",80))
  myip = s.getsockname()[0]
  s.close()
  return myip   

def main():
  myip = getipaddress()
  url = "http://saasmath.seattleacademy.org/saasbot/clearbot.php"
  payload = {'botname':myip}
  requests.get(url, params=payload)
  print "clearing pending commands"
  c = create.Create('/dev/ttyUSB0', 2)
  url = "http://saasmath.seattleacademy.org/saasbot/readbot.php"
  
  mysession = requests.Session()
  print "Checking sensors, waiting for commands ..."
  try:
	while 1:
		payload = {'botname':myip}
		VOLTAGE = c.getSensor('VOLTAGE')
		if VOLTAGE == None:
		    print "no sensors, turn robot on?"
		    break
		sensors = {}
		sensors['VOLTAGE'] = str(VOLTAGE)
		sensors['BUMPS_AND_WHEEL_DROPS'] = str(c.getSensor('BUMPS_AND_WHEEL_DROPS'))
		sensors['WALL_SIGNAL'] = str(c.getSensor('WALL_SIGNAL'))
		sensors['CLIFF_LEFT_SIGNAL'] = str(c.getSensor('CLIFF_LEFT_SIGNAL'))
		sensors['CLIFF_FRONT_LEFT_SIGNAL'] = str(c.getSensor('CLIFF_FRONT_LEFT_SIGNAL'))
		sensors['CLIFF_FRONT_RIGHT_SIGNAL'] = str(c.getSensor('CLIFF_FRONT_RIGHT_SIGNAL'))
		sensors['CLIFF_RIGHT_SIGNAL'] = str(c.getSensor('CLIFF_FRONT_LEFT_SIGNAL'))
		sensors['SONG_PLAYING'] = str(c.getSensor('SONG_PLAYING'))
		sensors['OI_MODE'] = str(c.getSensor('OI_MODE'))
		sensors['CHARGING_SOURCES_AVAILABLE'] = str(c.getSensor('CHARGING_SOURCES_AVAILABLE'))
		sensors['RIGHT_VELOCITY'] = str(c.getSensor('RIGHT_VELOCITY'))
		sensors['LEFT_VELOCITY'] = str(c.getSensor('LEFT_VELOCITY'))
		payload['sensors'] = json.dumps(sensors)
		payload['VOLTAGE'] = str(c.getSensor('VOLTAGE'))
		r = mysession.get(url,params=payload)
		bytearray = r.text.split(',')
		if(r.text != ""):
		  print "sending command " + r.text
		  moveit = map(int, bytearray)
		  c._rawSend(moveit)

		time.sleep(.5)
		
  except KeyboardInterrupt:
		print 'shutdown'	
  		c.shutdown()
  


if __name__ == '__main__':
  main()